- if @thread.locked
	Thread locked
- if !ApplicationHelper.bg_ponies && visitor.is_dummy
	Please 
	%a(data-external-form="#{new_user_session_path}.json" data-icon="sign-in" data-title="Login" data-thin="true" href="#{new_user_session_path}")
		sign in
	to comment.
- else
	= form_for(Comment.new, url: comments_path, html: {method: :post, class: "comment post-box"}) do |f|
		%input{type: "hidden", name: "[thread_id]", value: @thread.id}
		%input{type: "hidden", name: "order", value: @order}
		.artist-bio.bio
			%a{class: !visitor.is_dummy && "user-link", "data-id": visitor.id, href: visitor.link}
				= render 'users/avatar/medium', user: visitor
		%label
			.content.editing.previewable
				.name
					%a{class: !visitor.is_dummy && "user-link", "data-id": visitor.id, href: visitor.link}= visitor.username
					- if user_signed_in?
						= render 'badges/badges', user: current_user
				= render "comments/edit_toolbar"
				.comment-content.preview
				%textarea.comment-content(required="true" name="comment")
				%hr/
				.actions
					- if visitor.is_dummy
						= recaptcha_tags
						%hr/
					%button.green.post-submitter(data-thread-id="#{@thread.id}")>
						%span Post Comment
						%i.posting-spinner.fa.fw.fa-spinner.fa-spin
					%button.blue.state-toggle.button-fw(type="button" data-state="editing" data-parent=".previewable")>
						%span.on Preview
						%span.off Edit
					= flash[:recaptcha_error]
